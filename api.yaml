swagger: '2.0'
info:
  version: 1.0.0
  title: Microservicio de autenticacion 
  description: Permite la creacion y logueo de usuarios. Fue desarrollado usando el lenguaje de python con el framework de flask y con una base de datos sqlite. Para la ejecucion de pruebas ejecutar el microservicio y  habilitar cors en el navegador, eso se realiza con una extension.
host: localhost:5002
schemes:
  - http
consumes:
  - application/json
produces:
  - application/json
paths:
  /users:
    post:
      tags:
      - "Basico autenticacion"
      summary: "Crear usuarios en la base de datos"
      operationId: "Create"
      parameters:
      - in: "body"
        name: "Creation"
        description: "Registro de usuario"
        schema:
          $ref: "#/definitions/Sign"
      responses:
        200:
          description: "Nuevo usuario creado!"
    put:
      tags:
      - "Basico autenticacion"
      summary: "Actualizar usuario de la base de datos"
      operationId: "Update"
      parameters:
      - in: "body"
        name: "Update"
        description: "Registro de usuario"
        schema:
          $ref: "#/definitions/Update"
      responses:
        200:
          description: "Actualizacion exitosa"
    delete:
      tags: 
        - "Basico autenticacion"
      summary: "Elimina usuarios de la base de datos"
      operationId: "DeleteUsers"
      responses:
        200:
          description: "  Eliminacion de usuarios satisfactoria!"
    get:
      tags: 
        - "Basico autenticacion"
      summary: "Obtener todos los usuarios de la base de datos"
      operationId: "Obtener"
      responses:
        200:
          description: Sign
          
  /users/username/{username}:
    get:
      tags: 
        - "Busqueda y eliminacion"
      summary: "Obtener un usuario por username o correo"
      operationId: "GetbyUsername"
      parameters:
      - in: path
        name: username
        type: string
        required: true
      responses:
        200:
          description: Sign
    delete:
      tags:
        - "Busqueda y eliminacion"
      summary: "Eliminar un usuario dado un username o correo"
      operationId: "DeleteUser"
      parameters:
      - in: path
        name: username
        type: string
        required: true
      responses:
        200:
          description: "Usuario eliminado correctamente"
  /users/login:
    post:
      tags:
      - "Logueo"
      summary: Permite el ingreso de usuarios
      operationId: Ingresar
      parameters:
        - name: Logueo
          in: body
          required: true
          description: Logueo de usuarios a la app
          schema:
            $ref: '#/definitions/Login'
      responses:
        200:
          description: Token

          
  /users/logout:
    get:
      tags:
      - "Logueo"
      summary: Cerrar sesion del usuario 
      operationId: Quit 
      responses:
        200:
          description: Log out exitoso
definitions:

  Login:
    type: object
    properties:
      username:
        type: string
      password:
        type: string
  Sign:
    type: object
    properties:
      nombres:
        type: string
      apellidos:
        type: string
      username:
        type: string
      email:
        type: string
      password:
        type: string
      rol:
        type: boolean
      descripcion: 
        type: string
      fecha:
        type: string
  Update:
    type: object
    properties:
      public_id:
        type: string
      nombres:
        type: string
      apellidos:
        type: string
      username:
        type: string
      rol:
        type: boolean
      descripcion: 
        type: string